/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Client;

import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

        
/**
 *
 * @author Ramiro
 */
public class NewJFrame extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    public NewJFrame() {
        initComponents();
        initComboBox();
        fillLists();
        botonOcultarGustosConfirmados();
        botonOcultarConfirmar();
        botonOcultarImprimir();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        grupoHelados = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        radioCucurucho = new javax.swing.JRadioButton();
        radioVasito = new javax.swing.JRadioButton();
        radioCuarto = new javax.swing.JRadioButton();
        radioMedio = new javax.swing.JRadioButton();
        radioKilo = new javax.swing.JRadioButton();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        panelDisponible = new javax.swing.JPanel();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        listaGustosDisponibles = new javax.swing.JList<>();
        botonAgregar = new javax.swing.JButton();
        panelSeleccionados = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        listaGustosSeleccionados = new javax.swing.JList<>();
        botonQuitar = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        checkBaniado = new javax.swing.JCheckBox();
        comboCantidadGustos = new javax.swing.JComboBox<>();
        botonBaniar = new javax.swing.JButton();
        botonDesba√±ar = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        botonCancelar = new javax.swing.JButton();
        botonConfirmar = new javax.swing.JButton();
        labelPrecioTotal = new javax.swing.JLabel();
        botonImprimir = new javax.swing.JButton();
        botonComprobar = new javax.swing.JButton();
        labelTexto = new javax.swing.JLabel();
        botonGustosConfirmados = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        setResizable(false);

        jPanel1.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 0)), javax.swing.BorderFactory.createTitledBorder(null, "Tipo de Helado", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11)))); // NOI18N

        grupoHelados.add(radioCucurucho);
        radioCucurucho.setText("Cucurucho");
        radioCucurucho.setActionCommand("Cucurucho ");
        radioCucurucho.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioCucuruchoActionPerformed(evt);
            }
        });

        grupoHelados.add(radioVasito);
        radioVasito.setText("Vasito");
        radioVasito.setActionCommand("Vasito ");
        radioVasito.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioVasitoActionPerformed(evt);
            }
        });

        grupoHelados.add(radioCuarto);
        radioCuarto.setText("1/4 Kilo");
        radioCuarto.setActionCommand("1/4 Kilo ");
        radioCuarto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioCuartoActionPerformed(evt);
            }
        });

        grupoHelados.add(radioMedio);
        radioMedio.setText("1/2 Kilo");
        radioMedio.setActionCommand("1/2 Kilo ");
        radioMedio.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioMedioActionPerformed(evt);
            }
        });

        grupoHelados.add(radioKilo);
        radioKilo.setText("1 Kilo");
        radioKilo.setActionCommand("1 Kilo ");
        radioKilo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioKiloActionPerformed(evt);
            }
        });

        jLabel1.setText("Pote:");
        jLabel1.setOpaque(true);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(radioCucurucho)
                .addGap(95, 95, 95)
                .addComponent(radioVasito)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(radioKilo)
                    .addComponent(radioMedio)
                    .addComponent(radioCuarto))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(radioCucurucho)
                    .addComponent(radioVasito)
                    .addComponent(radioCuarto)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(radioMedio)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(radioKilo))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 0)), javax.swing.BorderFactory.createTitledBorder(null, "Seleccion de Gustos", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11)))); // NOI18N

        panelDisponible.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 0)), javax.swing.BorderFactory.createTitledBorder("Gustos Disponibles")));
        panelDisponible.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                panelDisponibleAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });

        jPanel6.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 0)));

        listaGustosDisponibles.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 0)));
        listaGustosDisponibles.addAncestorListener(new javax.swing.event.AncestorListener() {
            public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
            }
            public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
                listaGustosDisponiblesAncestorAdded(evt);
            }
            public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
            }
        });
        jScrollPane1.setViewportView(listaGustosDisponibles);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 178, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );

        botonAgregar.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        botonAgregar.setText("Agregar");
        botonAgregar.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 0)), javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        botonAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonAgregarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelDisponibleLayout = new javax.swing.GroupLayout(panelDisponible);
        panelDisponible.setLayout(panelDisponibleLayout);
        panelDisponibleLayout.setHorizontalGroup(
            panelDisponibleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDisponibleLayout.createSequentialGroup()
                .addGroup(panelDisponibleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelDisponibleLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelDisponibleLayout.createSequentialGroup()
                        .addGap(83, 83, 83)
                        .addComponent(botonAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelDisponibleLayout.setVerticalGroup(
            panelDisponibleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelDisponibleLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(botonAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        panelSeleccionados.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 0)), javax.swing.BorderFactory.createTitledBorder("Gustos Seleccionados")));

        jPanel7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 0)));

        listaGustosSeleccionados.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 0)));
        jScrollPane2.setViewportView(listaGustosSeleccionados);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addContainerGap())
        );

        botonQuitar.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        botonQuitar.setText("Quitar");
        botonQuitar.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 0)), javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        botonQuitar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonQuitarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelSeleccionadosLayout = new javax.swing.GroupLayout(panelSeleccionados);
        panelSeleccionados.setLayout(panelSeleccionadosLayout);
        panelSeleccionadosLayout.setHorizontalGroup(
            panelSeleccionadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelSeleccionadosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelSeleccionadosLayout.createSequentialGroup()
                .addContainerGap(92, Short.MAX_VALUE)
                .addComponent(botonQuitar, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(73, 73, 73))
        );
        panelSeleccionadosLayout.setVerticalGroup(
            panelSeleccionadosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelSeleccionadosLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(botonQuitar, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelDisponible, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(panelSeleccionados, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panelSeleccionados, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(panelDisponible, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 0)), javax.swing.BorderFactory.createTitledBorder(null, "Cantidad de Gustos", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11)))); // NOI18N

        checkBaniado.setText("Ba√±ado en chocolate");
        checkBaniado.setEnabled(false);
        checkBaniado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkBaniadoActionPerformed(evt);
            }
        });

        comboCantidadGustos.setName(""); // NOI18N
        comboCantidadGustos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboCantidadGustosActionPerformed(evt);
            }
        });

        botonBaniar.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        botonBaniar.setText("Ba√±ar");
        botonBaniar.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 0)), javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        botonBaniar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonBaniarActionPerformed(evt);
            }
        });

        botonDesba√±ar.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        botonDesba√±ar.setText("Desba√±ar");
        botonDesba√±ar.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 0)), javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        botonDesba√±ar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonDesba√±arActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(comboCantidadGustos, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(botonBaniar, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(botonDesba√±ar, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addComponent(checkBaniado)
                        .addGap(39, 39, 39))))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addComponent(comboCantidadGustos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(botonBaniar)
                            .addComponent(botonDesba√±ar))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(checkBaniado)))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        jLabel2.setFont(new java.awt.Font("Adobe Arabic", 3, 12)); // NOI18N
        jLabel2.setText("                    Heladeria Ramiro");
        jLabel2.setToolTipText("");
        jLabel2.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jLabel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 0)));

        jPanel8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 0)));

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel9.setText("TOTAL A PAGAR:");

        botonCancelar.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        botonCancelar.setText("Cancelar");
        botonCancelar.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 0)), javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        botonCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonCancelarActionPerformed(evt);
            }
        });

        botonConfirmar.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        botonConfirmar.setText("Confirmar");
        botonConfirmar.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 0)), javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        botonConfirmar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonConfirmarActionPerformed(evt);
            }
        });

        botonImprimir.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        botonImprimir.setText("Imprimir");
        botonImprimir.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 0)), javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        botonImprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonImprimirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel9)
                .addGap(18, 18, 18)
                .addComponent(labelPrecioTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 95, Short.MAX_VALUE)
                .addComponent(botonImprimir, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(botonCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(botonConfirmar, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelPrecioTotal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel8Layout.createSequentialGroup()
                        .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(botonConfirmar)
                            .addComponent(botonCancelar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(botonImprimir, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        botonComprobar.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        botonComprobar.setText("Comprobar");
        botonComprobar.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 0)), javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        botonComprobar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonComprobarActionPerformed(evt);
            }
        });

        botonGustosConfirmados.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        botonGustosConfirmados.setText("Gustos Confirmados");
        botonGustosConfirmados.setBorder(javax.swing.BorderFactory.createCompoundBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(102, 102, 0)), javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED)));
        botonGustosConfirmados.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botonGustosConfirmadosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
            .addGroup(layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(botonComprobar, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(70, 70, 70)
                .addComponent(labelTexto, javax.swing.GroupLayout.PREFERRED_SIZE, 327, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 347, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(122, 122, 122))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(botonGustosConfirmados)
                        .addGap(225, 225, 225))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(120, 120, 120)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(labelTexto, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(botonComprobar)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(botonGustosConfirmados)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(31, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

   private void fillLists() {
          
      
      
       DefaultListModel<String> listModelDisponibles = new DefaultListModel<>();
        listaGustosDisponibles.setModel(listModelDisponibles);
        
        DefaultListModel<String> listModelSeleccionados = new DefaultListModel<>();
        listaGustosSeleccionados.setModel(listModelSeleccionados);
        
        DefaultListModel<String> modelNecesario = (DefaultListModel) listaGustosDisponibles.getModel();
        
        modelNecesario.addElement("Limon");
        modelNecesario.addElement("Vainilla");
        modelNecesario.addElement("Dulce de Leche");
        modelNecesario.addElement("Chocolate");
        modelNecesario.addElement("Menta Graniza");
        modelNecesario.addElement("Frutilla");
        modelNecesario.addElement("Crema Americana");
        modelNecesario.addElement("Mango");
        
    
    }
   
    private void radioCucuruchoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioCucuruchoActionPerformed
        enabledBaniado();      
        fillComboCantidadGustos(2);
        precioBaniado();
        checkBaniado.setVisible(true);
        botonBaniar.setVisible(true);
        botonDesba√±ar.setVisible(true);
       ((DefaultListModel)listaGustosSeleccionados.getModel()).clear();       
       fillLists();
       botonOcultarConfirmar();
       botonOcultarGustosConfirmados();
       botonOcultarImprimir();
    }//GEN-LAST:event_radioCucuruchoActionPerformed

    private void comboCantidadGustosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboCantidadGustosActionPerformed
     
    }//GEN-LAST:event_comboCantidadGustosActionPerformed

    private void radioVasitoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioVasitoActionPerformed
       disableBaniado();
       fillComboCantidadGustos(2);           
       labelPrecioTotal.setText("$130");      
       checkBaniado.setVisible(false);
       botonBaniar.setVisible(false);
       botonDesba√±ar.setVisible(false);
       ((DefaultListModel)listaGustosSeleccionados.getModel()).clear();     
       fillLists();
       botonOcultarConfirmar();
       botonOcultarGustosConfirmados();
       botonOcultarImprimir();
    }//GEN-LAST:event_radioVasitoActionPerformed

    private void checkBaniadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkBaniadoActionPerformed
       precioBaniado();
      
       
    }//GEN-LAST:event_checkBaniadoActionPerformed

    private void radioCuartoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioCuartoActionPerformed
       disableBaniado();
       fillComboCantidadGustos(2);
       labelPrecioTotal.setText("$140");
        checkBaniado.setVisible(false);
       botonBaniar.setVisible(false);
       botonDesba√±ar.setVisible(false);
       ((DefaultListModel)listaGustosSeleccionados.getModel()).clear();
       fillLists();
       botonOcultarConfirmar();
       botonOcultarGustosConfirmados();
       botonOcultarImprimir();
    }//GEN-LAST:event_radioCuartoActionPerformed

    private void radioMedioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioMedioActionPerformed
        disableBaniado();
        fillComboCantidadGustos(3);  
        labelPrecioTotal.setText("$150");
        ((DefaultListModel)listaGustosSeleccionados.getModel()).clear();
         fillLists();
        botonOcultarConfirmar();
        botonOcultarGustosConfirmados();
        botonOcultarImprimir();
    }//GEN-LAST:event_radioMedioActionPerformed

    private void radioKiloActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioKiloActionPerformed
        disableBaniado();
        fillComboCantidadGustos(4);
        labelPrecioTotal.setText("$160");
        checkBaniado.setVisible(false);
        botonBaniar.setVisible(false);
        botonDesba√±ar.setVisible(false);
        ((DefaultListModel)listaGustosSeleccionados.getModel()).clear();
        fillLists();
       botonOcultarConfirmar();
       botonOcultarGustosConfirmados();
       botonOcultarImprimir();
    }//GEN-LAST:event_radioKiloActionPerformed

    private void panelDisponibleAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_panelDisponibleAncestorAdded
      
    }//GEN-LAST:event_panelDisponibleAncestorAdded

    private void botonQuitarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonQuitarActionPerformed
       String gustos = listaGustosSeleccionados.getSelectedValue();
        
        
        if (gustos == null){
            JOptionPane.showMessageDialog(this, "Primero seleccione un gusto para Quitar", "ERROR", JOptionPane.ERROR_MESSAGE);
        }
        else{
        DefaultListModel<String> modelGustosDisponibles = (DefaultListModel<String>)listaGustosDisponibles.getModel();
        DefaultListModel<String> modelGustosSeleccionados = (DefaultListModel<String>)listaGustosSeleccionados.getModel();
        
            modelGustosDisponibles.addElement(gustos);
            modelGustosSeleccionados.removeElement(gustos);        
       }
        botonOcultarImprimir();
      
    }//GEN-LAST:event_botonQuitarActionPerformed

    private void botonAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonAgregarActionPerformed
        
        
        
        int maxGustos = Integer.valueOf((String)comboCantidadGustos.getSelectedItem());
        
        String gustos = listaGustosDisponibles.getSelectedValue();
        
        
        if (gustos == null){
            JOptionPane.showMessageDialog(this, "Primero seleccione un gusto para Agregar", "ERROR", JOptionPane.ERROR_MESSAGE);
        }
        else if(listaGustosSeleccionados.getModel().getSize() != maxGustos){
        DefaultListModel<String> modelGustosDisponibles = (DefaultListModel<String>)listaGustosDisponibles.getModel();
        DefaultListModel<String> modelGustosSeleccionados = (DefaultListModel<String>)listaGustosSeleccionados.getModel();
        
            modelGustosSeleccionados.addElement(gustos);
            modelGustosDisponibles.removeElement(gustos); 
          
       }else{
            JOptionPane.showMessageDialog(this, "Usted ya llego al limite de gustos seleccionados", "ERROR", JOptionPane.ERROR_MESSAGE);
            
           }
        
       if(listaGustosSeleccionados.getModel().getSize() > 0){
           botonMostrarGustosConfirmados();   
        }
    }//GEN-LAST:event_botonAgregarActionPerformed

    private void botonConfirmarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonConfirmarActionPerformed
      // botonMostrarConfirmar();
        JOptionPane.showMessageDialog(this, "¬°Pedido realizado!","OK", JOptionPane.INFORMATION_MESSAGE);
        this.dispose();
       
       
    }//GEN-LAST:event_botonConfirmarActionPerformed

    private void listaGustosDisponiblesAncestorAdded(javax.swing.event.AncestorEvent evt) {//GEN-FIRST:event_listaGustosDisponiblesAncestorAdded
       
    }//GEN-LAST:event_listaGustosDisponiblesAncestorAdded

    private void botonComprobarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonComprobarActionPerformed
        
       
         
        String radioSeleccionado = grupoHelados.getSelection().getActionCommand();
        
        String comboSeleccionado = comboCantidadGustos.getSelectedItem().toString();
   
        labelTexto.setText("Tipo de Helado: " + radioSeleccionado + "Cantidad de Gustos: " + comboSeleccionado);
        
        if(checkBaniado.isSelected()== true){
            JOptionPane.showMessageDialog(this, "Ba√±ado en Chocolate","OK", JOptionPane.INFORMATION_MESSAGE);
                
      }  
      
    }//GEN-LAST:event_botonComprobarActionPerformed

    private void botonBaniarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonBaniarActionPerformed
        checkBaniado.setSelected(true);   
        //errorBaniado();
        precioBaniado();
        botonOcultarConfirmar();
        botonOcultarGustosConfirmados();
        botonOcultarImprimir();
    }//GEN-LAST:event_botonBaniarActionPerformed

    private void botonDesba√±arActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonDesba√±arActionPerformed
        checkBaniado.setSelected(false);
        precioBaniado();
        botonOcultarConfirmar();
        botonOcultarGustosConfirmados();
        botonOcultarImprimir();
    }//GEN-LAST:event_botonDesba√±arActionPerformed

    private void botonCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonCancelarActionPerformed
        botonRestore();
        botonOcultarConfirmar();
        botonOcultarGustosConfirmados();
        botonOcultarImprimir();
        initComboBox();
    }//GEN-LAST:event_botonCancelarActionPerformed

    private void botonGustosConfirmadosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonGustosConfirmadosActionPerformed
        int maxGustos = Integer.valueOf((String)comboCantidadGustos.getSelectedItem());
        
        
        DefaultListModel<String>  modelComprar = (DefaultListModel<String>)listaGustosSeleccionados.getModel();
        DefaultListModel<String>  modelNecesarios = (DefaultListModel<String>)listaGustosDisponibles.getModel();
        
        if(listaGustosSeleccionados.getModel().getSize() < maxGustos){
          JOptionPane.showMessageDialog(this, "Usted a seleccionado menos gustos", "ERROR", JOptionPane.ERROR_MESSAGE);  
         
    }else if(listaGustosSeleccionados.getModel().getSize() == maxGustos){        
            JOptionPane.showMessageDialog(this, "Gustos seleccionados: " + modelComprar.toString(), "Informaci√≥n", JOptionPane.INFORMATION_MESSAGE);
            botonMostrarConfirmar();
            botonMostrarImprimir();
        }    
        
        if (modelComprar.isEmpty()){
            JOptionPane.showMessageDialog(this, "Elija algun gusto para continuar", "ERROR", JOptionPane.ERROR_MESSAGE);
            botonOcultarGustosConfirmados();
            botonOcultarConfirmar();
            botonOcultarImprimir();
        }
         
    
    }//GEN-LAST:event_botonGustosConfirmadosActionPerformed

    private void botonImprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botonImprimirActionPerformed
         
        int maxGustos = Integer.valueOf((String)comboCantidadGustos.getSelectedItem());
               
        DefaultListModel<String>  modelComprar = (DefaultListModel<String>)listaGustosSeleccionados.getModel();
        DefaultListModel<String>  modelNecesarios = (DefaultListModel<String>)listaGustosDisponibles.getModel();
        
        String radioSeleccionado = grupoHelados.getSelection().getActionCommand();
        
        String comboSeleccionado = comboCantidadGustos.getSelectedItem().toString();
     
        String labelSeleccionado = labelPrecioTotal.getText().toString();      
        
         if((listaGustosSeleccionados.getModel().getSize() == maxGustos)&& (checkBaniado.isSelected()== false) && (radioCucurucho.isSelected()== false)){        
          
            botonMostrarConfirmar();
            JOptionPane.showMessageDialog(this,"Su helado cuenta con las siguientes caracteristicas: \nTipo de helado: " + radioSeleccionado + "\nCantidad de sabores: " + comboSeleccionado +"\nSus sabores son: " + modelComprar.toString() + "\nCon un precio de: " + labelSeleccionado, "TICKET", JOptionPane.INFORMATION_MESSAGE);
        
         }if ((listaGustosSeleccionados.getModel().getSize() == maxGustos) && (checkBaniado.isSelected()== true) && (radioCucurucho.isSelected()== true)){  
            botonMostrarConfirmar();
            JOptionPane.showMessageDialog(this,"Su helado cuenta con las siguientes caracteristicas: \nTipo de helado: " + radioSeleccionado + "\nCantidad de sabores: " + comboSeleccionado +"\nSus sabores son: " + modelComprar.toString() + "\nBa√±ado en chocolate" + "\nCon un precio de: " + labelSeleccionado, "TICKET", JOptionPane.INFORMATION_MESSAGE);
        
         }if ((listaGustosSeleccionados.getModel().getSize() == maxGustos) && (checkBaniado.isSelected()== false) && (radioCucurucho.isSelected()== true)){
            botonMostrarConfirmar();
            JOptionPane.showMessageDialog(this,"Su helado cuenta con las siguientes caracteristicas: \nTipo de helado: " + radioSeleccionado + "\nCantidad de sabores: " + comboSeleccionado +"\nSus sabores son: " + modelComprar.toString() + "\nNo esta ba√±ado en chocolate" + "\nCon un precio de: " + labelSeleccionado, "TICKET", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_botonImprimirActionPerformed
    }
   
    public static void main(String args[]) {
 
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton botonAgregar;
    private javax.swing.JButton botonBaniar;
    private javax.swing.JButton botonCancelar;
    private javax.swing.JButton botonComprobar;
    private javax.swing.JButton botonConfirmar;
    private javax.swing.JButton botonDesba√±ar;
    private javax.swing.JButton botonGustosConfirmados;
    private javax.swing.JButton botonImprimir;
    private javax.swing.JButton botonQuitar;
    private javax.swing.JCheckBox checkBaniado;
    private javax.swing.JComboBox<String> comboCantidadGustos;
    private javax.swing.ButtonGroup grupoHelados;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel labelPrecioTotal;
    private javax.swing.JLabel labelTexto;
    private javax.swing.JList<String> listaGustosDisponibles;
    private javax.swing.JList<String> listaGustosSeleccionados;
    private javax.swing.JPanel panelDisponible;
    private javax.swing.JPanel panelSeleccionados;
    private javax.swing.JRadioButton radioCuarto;
    private javax.swing.JRadioButton radioCucurucho;
    private javax.swing.JRadioButton radioKilo;
    private javax.swing.JRadioButton radioMedio;
    private javax.swing.JRadioButton radioVasito;
    // End of variables declaration//GEN-END:variables

    
    
    private void botonRestore(){
       grupoHelados.clearSelection();
       checkBaniado.setSelected(false);
       comboCantidadGustos.removeAllItems();
       fillLists();
       labelPrecioTotal.setText("");
       labelTexto.setText("");
       JOptionPane.showMessageDialog(this, "¬°Pedido cancelado!","OK", JOptionPane.INFORMATION_MESSAGE);   
       
}
    
    private void botonMostrarImprimir(){
        botonImprimir.setEnabled(true);
    }
    
    private void botonOcultarImprimir(){
        botonImprimir.setEnabled(false);
    }
    
    private void botonMostrarGustosConfirmados(){
        botonGustosConfirmados.setEnabled(true);
    }
    
    private void botonOcultarGustosConfirmados(){
        botonGustosConfirmados.setEnabled(false);
    }
    
    private void botonMostrarConfirmar(){
      botonConfirmar.setEnabled(true);      
 }
    
    private void botonOcultarConfirmar(){
        botonConfirmar.setEnabled(false);
    }
    
    private void precioBaniado(){
        if(checkBaniado.isSelected()== true){
            labelPrecioTotal.setText("$125");
          }
        else{
            labelPrecioTotal.setText("$120");
            }
    }
    
    //private void errorBaniado(){
    
    //if(radioVasito.isSelected()== true || radioCuarto.isSelected()== true || radioMedio.isSelected()== true || radioKilo.isSelected()== true){
     //       JOptionPane.showMessageDialog(null, "No se puede ba√±ar","ERROR", JOptionPane.ERROR_MESSAGE);        
     //       checkBaniado.setVisible(false);
      //      botonBaniar.setVisible(false);
        //    botonDesba√±ar.setVisible(false);
          //  checkBaniado.setSelected(false);
           
        //}
     //}
private void disableBaniado() {
       checkBaniado.setEnabled(false);
       checkBaniado.setSelected(false);
    }

    private void enabledBaniado() {
        checkBaniado.setEnabled(true);
    }
    
    private void initComboBox() {

        DefaultComboBoxModel modelo = new DefaultComboBoxModel<>();
        modelo.addElement("Definir");
        
        comboCantidadGustos.setModel(modelo);
    }

    private void fillComboCantidadGustos(int cantidad) {
        comboCantidadGustos.removeAllItems();
        
        DefaultComboBoxModel modeloCucurucho = new DefaultComboBoxModel<>();
        
        if (cantidad == 2){
            modeloCucurucho.addElement("1");
            modeloCucurucho.addElement("2");
      
        }
        
        if (cantidad == 3){
            modeloCucurucho.addElement("1");
            modeloCucurucho.addElement("2");
            modeloCucurucho.addElement("3");
      
        }
        
        if (cantidad == 4){
            modeloCucurucho.addElement("1");
            modeloCucurucho.addElement("2");
            modeloCucurucho.addElement("3");
            modeloCucurucho.addElement("4");
        
        }
        comboCantidadGustos.setModel(modeloCucurucho);
    }
   
}